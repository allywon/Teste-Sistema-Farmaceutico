unit ModelDB;

interface

uses
  System.SysUtils, System.Classes, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.Phys.MySQL,
  FireDAC.Phys.MySQLDef, FireDAC.VCLUI.Wait, FireDAC.Stan.Param, FireDAC.DatS,
  FireDAC.DApt.Intf, FireDAC.DApt, Data.DB, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client, FireDAC.Phys.SQLite, FireDAC.Phys.SQLiteDef,
  FireDAC.ConsoleUI.Wait;

type
  TModelDB = class(TDataModule)
    FDConnection: TFDConnection;
    FDPhysMySQLDriverLink: TFDPhysMySQLDriverLink;
    procedure DataModuleCreate(Sender: TObject);
  private
    FHTTPServer: TIdHTTPWebBrokerBridge;
  public
    function ConectarBanco: Boolean;
    procedure DesconectarBanco;
  end;

var
  DBModel: TModelDB;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

procedure TModelDB.DataModuleCreate(Sender: TObject);
begin
  FDConnection.Connected := False;
  FDPhysMySQLDriverLink.VendorLib := ExtractFilePath(ParamStr(0)) + 'libmysql.dll';
end;

function TModelDB.ConectarBanco: Boolean;
begin
  Result := False;
  try
    FDConnection.Connected := False;
    FDConnection.Params.Clear;
    FDConnection.Params.DriverID:='MySQL';
    FDConnection.Params.Values['Server']:='localhost';
    FDConnection.Params.Values['Port']:='3306';
    FDConnection.Params.Database:='banco_teste';
    FDConnection.Params.UserName:='root';
    FDConnection.Params.Password:='root';
    FDConnection.Params.Values['CharacterSet']:='UTF8';
    FDConnection.Params.Values['UseSSL'] := 'False';
    FDConnection.FormatOptions.SortLocale:=1046;
    FDConnection.FetchOptions.RowsetSize:=-1;

    FDConnection.Connected := True;
    Result := True;
    WriteLn('Conexão com o banco de dados MySQL estabelecida com sucesso!');
  except
    on E: Exception do
    begin
      WriteLn('Erro ao conectar ao banco: ' + E.Message);
      Result := False;
    end;
  end;
end;

procedure TModelDB.DesconectarBanco;
begin
  if FDConnection.Connected then
  begin
    FDConnection.Connected := False;
    WriteLn('Conexão com o banco de dados encerrada.');
  end;
end;

end.
